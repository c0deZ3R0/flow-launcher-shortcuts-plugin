<Page x:Class="Flow.Launcher.Plugin.ShortcutPlugin.App.Views.ShortcutDetailsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:CommunityToolkit.WinUI.Controls"
      xmlns:converters="using:CommunityToolkit.WinUI.UI.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:helpers="using:Flow.Launcher.Plugin.ShortcutPlugin.App.Helpers"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:shortcutModels="using:Flow.Launcher.Plugin.ShortcutPlugin.App.Models.Shortcuts"
      xmlns:commonModels="using:Flow.Launcher.Plugin.ShortcutPlugin.Common.Models.Shortcuts"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
      xmlns:viewmodels="using:Flow.Launcher.Plugin.ShortcutPlugin.App.ViewModels"
      x:Name="ThePage"
      d:DataContext="{d:DesignInstance Type=viewmodels:ShortcutDetailsViewModel}"
      mc:Ignorable="d">

    <Page.Resources>
        <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <converters:BoolNegationConverter x:Key="BoolNegationConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverterInverted"
                                              TrueValue="Collapsed"
                                              FalseValue="Visible" />
        <helpers:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter" />

        <!--  Spacing between cards  -->
        <x:Double x:Key="SettingsCardSpacing">4</x:Double>

        <!--  Style (inc. the correct spacing) of a section header  -->
        <Style x:Key="SettingsSectionHeaderTextBlockStyle"
               BasedOn="{StaticResource BodyStrongTextBlockStyle}"
               TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="Margin"
                        Value="1,30,0,6" />
            </Style.Setters>
        </Style>

        <DataTemplate x:Key="FileShortcutTemplate"
                      x:DataType="shortcutModels:ObservableFileShortcut">
            <StackPanel>
                <controls:SettingsCard Header="Path">
                    <StackPanel Orientation="Horizontal"
                                Spacing="8">
                        <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                 IsReadOnly="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                 Text="{x:Bind Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button
                            Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                            Click="PickFileButton_Click">
                            <FontIcon FontSize="16"
                                      Glyph="&#xE712;" />
                        </Button>
                    </StackPanel>
                </controls:SettingsCard>

                <controls:SettingsCard Header="App">
                    <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                             IsReadOnly="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                             Text="{x:Bind App, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </controls:SettingsCard>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="DirectoryShortcutTemplate"
                      x:DataType="shortcutModels:ObservableDirectoryShortcut">

            <StackPanel>
                <controls:SettingsCard Header="Path">
                    <StackPanel Orientation="Horizontal"
                                Spacing="8">
                        <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                                 IsReadOnly="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                                 Text="{x:Bind Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button
                            Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                            Click="PickDirectoryButton_Click">
                            <FontIcon FontSize="16"
                                      Glyph="&#xE712;" />
                        </Button>
                    </StackPanel>
                </controls:SettingsCard>

            </StackPanel>

        </DataTemplate>

        <DataTemplate x:Key="SnippetShortcutTemplate"
                      x:DataType="shortcutModels:ObservableSnippetShortcut">

            <StackPanel>
                <controls:SettingsCard Header="Value">
                    <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                             IsReadOnly="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                             Text="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap"
                             AcceptsReturn="True"
                             IsSpellCheckEnabled="True"
                             MinWidth="400" />
                </controls:SettingsCard>

            </StackPanel>

        </DataTemplate>

        <DataTemplate x:Key="UrlShortcutTemplate"
                      x:DataType="shortcutModels:ObservableUrlShortcut">
            <StackPanel>
                <controls:SettingsCard Header="Url">
                    <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                             IsReadOnly="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                             Text="{x:Bind Url, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </controls:SettingsCard>

                <controls:SettingsCard Header="App">
                    <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                             IsReadOnly="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                             Text="{x:Bind App, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </controls:SettingsCard>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ShellShortcutTemplate"
                      x:DataType="shortcutModels:ObservableShellShortcut">
            <StackPanel>
                <controls:SettingsCard Header="Shell type">

                    <ComboBox xmlns:enums="using:Flow.Launcher.Plugin.ShortcutPlugin.Common.Models.Shortcuts"
                              xmlns:ui="using:CommunityToolkit.WinUI"
                              IsEnabled="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay}"
                              ItemsSource="{ui:EnumValues Type=enums:ShellType}"
                              SelectedItem="{x:Bind ShellType, Mode=TwoWay}" />

                </controls:SettingsCard>

                <controls:SettingsCard Header="Arguments">
                    <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                             IsReadOnly="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                             Text="{x:Bind Arguments, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </controls:SettingsCard>

                <controls:SettingsCard Header="Silent">
                    <ToggleSwitch IsEnabled="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay}"
                                  IsOn="{x:Bind Silent, Mode=TwoWay}" />
                </controls:SettingsCard>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="GroupShortcutTemplate"
                      x:DataType="shortcutModels:ObservableGroupShortcut">
            <StackPanel>
                <controls:SettingsExpander Header="Shortcuts"
                                           ItemsSource="{x:Bind Shortcuts}">
                    <controls:SettingsExpander.ItemTemplate>
                        <DataTemplate x:DataType="commonModels:Shortcut">
                            <controls:SettingsCard Description="{x:Bind Key}"
                                                   Header="{x:Bind GetDerivedType()}">
                                <Button
                                    Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <FontIcon FontSize="14"
                                              Foreground="{StaticResource SystemFillColorCriticalBrush}"
                                              Glyph="&#xE74D;" />
                                </Button>
                            </controls:SettingsCard>
                        </DataTemplate>
                    </controls:SettingsExpander.ItemTemplate>
                </controls:SettingsExpander>

                <controls:SettingsExpander Header="Keys"
                                           ItemsSource="{x:Bind Keys}">
                    <controls:SettingsExpander.ItemTemplate>
                        <DataTemplate x:DataType="x:String">
                            <controls:SettingsCard Description="{x:Bind}"
                                                   Header="{x:Bind}">
                                <Button
                                    Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <FontIcon FontSize="14"
                                              Foreground="{StaticResource SystemFillColorCriticalBrush}"
                                              Glyph="&#xE74D;" />
                                </Button>
                            </controls:SettingsCard>
                        </DataTemplate>
                    </controls:SettingsExpander.ItemTemplate>

                    <controls:SettingsExpander.ItemsFooter>
                        <controls:SettingsCard Header="Create shortcut key"
                                               IsEnabled="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay}"
                                               Style="{StaticResource DefaultSettingsExpanderItemStyle}">
                            <Button Content="Add new key" />

                        </controls:SettingsCard>
                    </controls:SettingsExpander.ItemsFooter>
                </controls:SettingsExpander>

                <controls:SettingsCard Header="Group launch">
                    <ToggleSwitch IsEnabled="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay}"
                                  IsOn="{x:Bind GroupLaunch, Mode=TwoWay}" />
                </controls:SettingsCard>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="DefaultTemplate">
            <StackPanel>
                <ProgressRing IsActive="True"
                              IsEnabled="True" />
            </StackPanel>
        </DataTemplate>

        <helpers:ShortcutTemplateSelector x:Key="ShortcutTemplateSelector"
                                          DefaultTemplate="{StaticResource DefaultTemplate}"
                                          DirectoryShortcutTemplate="{StaticResource DirectoryShortcutTemplate}"
                                          FileShortcutTemplate="{StaticResource FileShortcutTemplate}"
                                          GroupShortcutTemplate="{StaticResource GroupShortcutTemplate}"
                                          ShellShortcutTemplate="{StaticResource ShellShortcutTemplate}"
                                          UrlShortcutTemplate="{StaticResource UrlShortcutTemplate}"
                                          SnippetShortcutTemplate="{StaticResource SnippetShortcutTemplate}" />
    </Page.Resources>

    <ScrollViewer HorizontalAlignment="Stretch"
                  VerticalScrollMode="Enabled">

        <StackPanel x:Name="ContentArea"
                    HorizontalAlignment="Stretch">

            <CommandBar HorizontalAlignment="Left"
                        Background="Transparent"
                        DefaultLabelPosition="Right"
                        IsOpen="False">
                <AppBarButton Click="EditButton_Click"
                              Icon="Edit"
                              Label="Edit mode"
                              Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverterInverted}}" />

                <!--Following buttons are only visible in edit mode-->
                <AppBarButton Command="{x:Bind ViewModel.SaveButtonCommand}"
                              Icon="Save"
                              Label="Save"
                              Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                <AppBarButton Command="{x:Bind ViewModel.DiscardButtonCommand}"
                              Icon="Delete"
                              Label="Discard"
                              Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
            </CommandBar>

            <!--  Validation Popups  -->
            <Grid>
                <InfoBar x:Name="SuccessInfoBar"
                         Title="Success"
                         Message="The form was filled in correctly."
                         Severity="Success">
                    <interactivity:Interaction.Behaviors>
                        <interactions:EventTriggerBehavior EventName="FormSubmissionCompleted"
                                                           SourceObject="{x:Bind ViewModel.Shortcut}">
                            <interactions:ChangePropertyAction PropertyName="IsOpen"
                                                               TargetObject="{x:Bind SuccessInfoBar}"
                                                               Value="True" />
                            <interactions:ChangePropertyAction PropertyName="IsOpen"
                                                               TargetObject="{x:Bind FailureInfoBar}"
                                                               Value="False" />
                        </interactions:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </InfoBar>
                <InfoBar x:Name="FailureInfoBar"
                         Title="Error"
                         Message="The form was filled in with some errors."
                         Severity="Error">
                    <InfoBar.ActionButton>
                        <Button Click="ShowErrorButton_Click"
                                Content="Show errors" />
                    </InfoBar.ActionButton>
                    <interactivity:Interaction.Behaviors>
                        <interactions:EventTriggerBehavior EventName="FormSubmissionFailed"
                                                           SourceObject="{x:Bind ViewModel.Shortcut}">
                            <interactions:ChangePropertyAction PropertyName="IsOpen"
                                                               TargetObject="{x:Bind SuccessInfoBar}"
                                                               Value="False" />
                            <interactions:ChangePropertyAction PropertyName="IsOpen"
                                                               TargetObject="{x:Bind FailureInfoBar}"
                                                               Value="True" />
                        </interactions:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </InfoBar>
            </Grid>

            <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                       Text="Generic shortcut details" />

            <controls:SettingsCard Description="This is used to invoke shortcut"
                                   Header="Key"
                                   IsEnabled="True">
                <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                         IsReadOnly="{x:Bind ViewModel.IsEditMode, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                         Text="{x:Bind ViewModel.Shortcut.Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </controls:SettingsCard>

            <controls:SettingsCard Header="Type">
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                           Text="{x:Bind ViewModel.Shortcut.GetDerivedType()}" />
            </controls:SettingsCard>

            <controls:SettingsCard Header="Description">
                <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                         IsReadOnly="{x:Bind ViewModel.IsEditMode, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                         Text="{x:Bind ViewModel.Shortcut.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </controls:SettingsCard>

            <controls:SettingsExpander Header="Alias"
                                       ItemsSource="{x:Bind ViewModel.Shortcut.Alias, Mode=OneWay}">
                <controls:SettingsExpander.ItemTemplate>
                    <DataTemplate x:DataType="x:String">
                        <controls:SettingsCard Header="{x:Bind}">
                            <Button Click="DeleteAliasButton_Click"
                                    Tag="{x:Bind}"
                                    Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <FontIcon FontSize="14"
                                          Foreground="{StaticResource SystemFillColorCriticalBrush}"
                                          Glyph="&#xE74D;" />
                            </Button>
                        </controls:SettingsCard>
                    </DataTemplate>
                </controls:SettingsExpander.ItemTemplate>
                <controls:SettingsExpander.ItemsFooter>
                    <controls:SettingsCard Header="Create shortcut alias"
                                           IsEnabled="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay}"
                                           Style="{StaticResource DefaultSettingsExpanderItemStyle}">
                        <Button Click="CreateAliasButton_Click"
                                Content="Add new alias" />
                    </controls:SettingsCard>
                </controls:SettingsExpander.ItemsFooter>
            </controls:SettingsExpander>

            <controls:SettingsCard Header="Icon">
                <StackPanel Orientation="Horizontal"
                            Spacing="8">
                    <TextBox Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                             IsReadOnly="{x:Bind ViewModel.IsEditMode, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
                             Text="{x:Bind ViewModel.Shortcut.Icon, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <Button
                        Visibility="{Binding ViewModel.IsEditMode, ElementName=ThePage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                        Click="PickIconButton_Click">
                        <FontIcon FontSize="16"
                                  Glyph="&#xE712;" />
                    </Button>
                </StackPanel>
            </controls:SettingsCard>

            <TextBlock Style="{StaticResource SettingsSectionHeaderTextBlockStyle}"
                       Text="Specific shortcut details" />

            <Grid>
                <ContentControl HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                Content="{x:Bind ViewModel.Shortcut, Mode=OneWay}"
                                ContentTemplateSelector="{StaticResource ShortcutTemplateSelector}" />
            </Grid>
        </StackPanel>
    </ScrollViewer>
</Page>